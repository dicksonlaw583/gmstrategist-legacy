<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Configuration
{
min_slice = 10;
step_time_limit = 500/room_speed;
native_congestion_factor = 2;
native_congestion_cut = 0.5;
native_slow_start_increment = 10/room_speed;
html5_congestion_factor = 0.9;
html5_congestion_cut = 0.5;
html5_slow_start_increment = 20/room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
{
tree = undefined;
ready = false;
congestion_factor = undefined;
congestion_cut = undefined;
slow_start_increment = undefined;
max_playout_plies = undefined;
max_playouts = undefined;
max_playout_ms = undefined;
max_ms = undefined;
progress = 0;
elapsed_playouts = 0;
elapsed_ms = 0;
callback = undefined;
callback_arg = undefined;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Expand the tree
{
if (is_array(tree) &amp;&amp; elapsed_ms &lt;= max_ms &amp;&amp; elapsed_playouts &lt;= max_playouts &amp;&amp; !ready) {
  var ref_fps = fps_real;
  if (os_browser != browser_not_a_browser) {
    ref_fps = fps;
  }
  if (ref_fps &lt; room_speed*congestion_factor) {
    step_time_limit *= 1-congestion_cut;
  } else {
    step_time_limit += slow_start_increment;
  }
  var time_slice = min(max_ms-elapsed_ms, max(min_slice, max_playout_ms, step_time_limit)),
      start_time = current_time,
      evaluations = mcts_evaluate(tree, max_playout_plies, time_slice, max_playouts-elapsed_playouts, time_slice);
  elapsed_playouts += evaluations;
  elapsed_ms += current_time-start_time;
  progress = max(elapsed_ms/max_ms, elapsed_playouts/max_playouts);
  if (elapsed_ms &gt; max_ms || elapsed_playouts &gt; max_playouts) {
    ready = true;
    progress = 1;
    if (!is_undefined(callback) &amp;&amp; !script_execute(callback, mcts_get_best_move(tree), callback_arg)) {
      instance_destroy();
    }
  }
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the correct congestion control parameters
{
if (os_browser == browser_not_a_browser) {
  congestion_factor = native_congestion_factor;
  congestion_cut = native_congestion_cut;
  slow_start_increment = native_slow_start_increment;
} else {
  congestion_factor = html5_congestion_factor;
  congestion_cut = html5_congestion_cut;
  slow_start_increment = html5_slow_start_increment;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
